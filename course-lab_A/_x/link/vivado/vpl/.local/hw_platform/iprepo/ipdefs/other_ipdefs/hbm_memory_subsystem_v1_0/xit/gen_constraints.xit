
set data_file_name hbm_memory_subsystem.rld
set xdc_file_name [current_instname].xdc

set preamble_text {
# *************************************************************************
#    ____  ____
#   /   /\/   /
#  /___/  \  /
#  \   \   \/    © Copyright 2017 Xilinx, Inc. All rights reserved.
#   \   \        This file contains confidential and proprietary
#   /   /        information of Xilinx, Inc. and is protected under U.S.
#  /___/   /\    and international copyright and other intellectual
#  \   \  /  \   property laws.
#   \___\/\___\
#
#
# *************************************************************************
#
# Disclaimer:
#
#       This disclaimer is not a license and does not grant any rights to
#       the materials distributed herewith. Except as otherwise provided in
#       a valid license issued to you by Xilinx, and to the maximum extent
#       permitted by applicable law: (1) THESE MATERIALS ARE MADE AVAILABLE
#       "AS IS" AND WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL
#       WARRANTIES AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY,
#       INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
#       NON-INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#       (2) Xilinx shall not be liable (whether in contract or tort,
#       including negligence, or under any other theory of liability) for
#       any loss or damage of any kind or nature related to, arising under
#       or in connection with these materials, including for any direct, or
#       any indirect, special, incidental, or consequential loss or damage
#       (including loss of data, profits, goodwill, or any type of loss or
#       damage suffered as a result of any action brought by a third party)
#       even if such damage or loss was reasonably foreseeable or Xilinx
#       had been advised of the possibility of the same.
#
# Critical Applications:
#
#       Xilinx products are not designed or intended to be fail-safe, or
#       for use in any application requiring fail-safe performance, such as
#       life-support or safety devices or systems, Class III medical
#       devices, nuclear facilities, applications related to the deployment
#       of airbags, or any other applications that could lead to death,
#       personal injury, or severe property or environmental damage
#       (individually and collectively, "Critical Applications"). Customer
#       assumes the sole risk and liability of any use of Xilinx products
#       in Critical Applications, subject only to applicable laws and
#       regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS PART OF THIS
# FILE AT ALL TIMES.
#
# *************************************************************************
}

if {![catch {gets_ipfile $data_file_name HMMS_DICT}]} {

   # Don't write anything in emulation mode i.e. no XDC
   if {![dict get $HMMS_DICT config SIM_EN]} {

      set fd [add_ipfile -usedIn {implementation} -usedInConstant true $xdc_file_name -processingOrder late]
      puts_ipfile $fd $preamble_text
   
      set num_mi    [dict get $HMMS_DICT config total_hmss_num_mi]
      set hmms_inst [dict get $HMMS_DICT config Component_Name]
   
      for {set i 0} {$i < $num_mi} {incr i} {
        set num_si [dict get $HMMS_DICT config NUM_SI]
        set slr_id [format S%.2d $i]_SLR
        set slr    [dict get $HMMS_DICT config [format S%.2d $i]_SLR]

        if {$i < $num_si} {
   
          # HBM port indicates the path needed
          set p [dict get $HMMS_DICT calc kernel_connections $i]
   
          if {$slr eq "SLR2"} {
   
            puts_ipfile $fd "# Register Slice SLR Placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR2\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]/inst\*slr_master\*\"\]"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR1\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]/inst\*slr_middle\*\"\]"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR0\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]/inst\*slr_slave\*\"\]"
   
            puts_ipfile $fd "# SC placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock      \[get_pblocks pblock_dynamic_SLR2\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/interconnect[string tolower $i]_[string tolower $p]\*\"\]"
   
          } elseif {$slr eq "SLR1"} {
            puts_ipfile $fd "# Register Slice SLR Placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR1\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]/inst\*slr_master\*\"\]"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR0\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]/inst\*slr_slave\*\"\]"
   
            puts_ipfile $fd "# SC placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock      \[get_pblocks pblock_dynamic_SLR1\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/interconnect[string tolower $i]_[string tolower $p]\*\"\]"
   
          } else {
            puts_ipfile $fd "# Register Slice SLR Placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR0\]    \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/slice[string tolower $i]_[string tolower $p]\*\"\]"
   
            puts_ipfile $fd "# SC placement in SLR $slr. Slave number is $i"
            puts_ipfile $fd "add_cells_to_pblock      \[get_pblocks pblock_dynamic_SLR0\] \[get_cells -hierarchical -filter \"\NAME=~\*/path_$p/interconnect[string tolower $i]_[string tolower $p]\*\"\]"
          }
        }
      }
   
      # PBLOCK reset synchronisers
   
      puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR0\] \[get_cells -hierarchical -filter \"\NAME=~\*/hbm_reset_sync\*SLR0\*\"\] -quiet"
      puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR1\] \[get_cells -hierarchical -filter \"\NAME=~\*/hbm_reset_sync\*SLR1\*\"\] -quiet"
      puts_ipfile $fd "add_cells_to_pblock \[get_pblocks pblock_dynamic_SLR2\] \[get_cells -hierarchical -filter \"\NAME=~\*/hbm_reset_sync\*SLR2\*\"\] -quiet"
   
      close_ipfile $fd

   }
   close_ipfile $data_file_name
}
